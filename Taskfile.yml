---
# https://taskfile.org

version: '2'

tasks:
  dev:
    cmds:
      - task: wpdev
      - task: gobuild
  prod:
    cmds:
      - task: build
  build:
    cmds:
      - task: clean
      - task: wpbuild
      - task: gobuild

  clean:
      - rm -rf public/css
      - rm -rf public/js
      - rm -rf public/bootstrap
      - rm -rf public/jquery
  test:
    cmds:
      - go test -v -p 1 ./...

  gobuild:
    cmds:
      - go build -v -o ./felice-n-franz{{exeExt}} .

  wpbuild:
    cmds:
      - npm --prefix ./web/ run build

  wpdev:
    cmds:
      - npm --prefix ./web/ run dev

  npmci:
    cmds:
      - npm --prefix ./web/ ci

  npmi:
    cmds:
      - rm -rf web/node_modules
      - npm --prefix ./web/ install

  # test-cli:
    # cmds:
      # - ./testfixtures -d sqlite -c testdb.sqlite3 -D testdata/fixtures

  # test:pg:
    # desc: Test PostgreSQL
    # cmds:
      # - task: test-db
        # vars: {DATABASE: postgresql}

  # test:mysql:
    # desc: Test MySQL
    # cmds:
      # - task: test-db
        # vars: {DATABASE: mysql}

  # test:sqlite:
    # desc: Test SQLite
    # cmds:
      # - task: test-db
        # vars: {DATABASE: sqlite}

  # test:sqlserver:
    # desc: Test SQLServer
    # cmds:
      # - task: test-db
        # vars: {DATABASE: sqlserver}

  # test:crdb:
    # desc: Test CockroachDB
    # cmds:
      # - task: test-db
        # vars: {DATABASE: cockroachdb}

  # test-db:
    # cmds:
      # - go test -v -tags {{.DATABASE}}

  # goreleaser:test:
    # desc: Tests release process without publishing
    # cmds:
      # - goreleaser --snapshot --rm-dist

  # docker:
    # cmds:
      # - task: docker:build
      # - task: docker:test

  # docker:build:
    # cmds:
      # - docker build -t testfixtures .

  # docker:test:
    # cmds:
      # - docker-compose down -v
      # - docker-compose run testfixtures go test -v -tags 'postgresql sqlite mysql sqlserver cockroachdb'
